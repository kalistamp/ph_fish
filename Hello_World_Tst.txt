
https://aws.amazon.com/

            [ Drop down in order of steps completed...]
            
           

* Obtained a Domain from Freenom (http://raymondspizzeria.cf/) 
    #Chose to grab a domain from Freenom instead of AWS Route 53 even tho i will be using most AWS for this first tester campaign 

* Created AWS Account for cloud - rroadrunner @ proton

* Favorite an AWS EC2 Instance (This is pretty much just a dedicated aws server)
    #Ec2 is the erver out victims will be connecting too

* Favorite an AWS S3 Bucket to receive emails back to our Domain we get earlier from Freenom 
    #If the victim responds back to our phishing email, you will be able to read the contents of there reply here
    
* Create my first EC2 Instance - 
           #Choose which type of Server you want to host this Instance: ( Canonical, Ubuntu, 22.04 LTS, amd64 jammy image build on 2022-06-09 )
           
           #Choose the type of instance: ( t.2.micro )
                 
           #Create a Key-Pair for your Instance and give it a name (.pem file): "ray_pizza"
           This key pair will be used later when it is time to SSH into our server
           
           #REVIEW SUMMARY OF YOUR INSTANCE BEFORE FINALLY LAUNCHING IT ...
           
           # SUMMARY:
           Software Image (AMI)
           Canonical, Ubuntu, 22.04 LTS, ...read more
           ami-085284d24fe829cd0
           Virtual server type (instance type)
           t2.micro
           Firewall (security group)
           New security group
           Storage
           1 volume(s) - 8 GiB
           
           # After Instance is succesfully launched you will be given an Instance ID number for confirmation: (i-099d3b79cdb74ec2d)

* NEXT We are going to Configure "security groups" for the new instance that we just created (ray_pizza). 
            #Security groups are going to let you regulate which ports you decide to leave open or closed on the server.
            
            #Click on "Create new Security Group", Go into "Indbound Rules", "Add Rule"
            - First we are going to create an open port that we can later SSH into:
            Type:
            Custom TCP
            Protocol: 
            TCP
            Port range: 
            22
            Source type:
            Anywhere-IPv4
            Source: 
            0.0.0.0/0
            Description: 
            SSh

            - Next Rule we will change the "type" to "Custon UDP", and open port to allow DNS to work on our server:
            Type:
            Custom UDP
            Protocol: 
            UDP
            Port range: 
            53
            Source type:
            Anywhere-IPv4
            Source 
            0.0.0.0/0
            Description: 
            Dns
            
            - Next we will open Port 80 to allow HTTP Traffic to flow through Server (Since this instance is being used as  webserver this is essential to work):
            Type:
            Custom TCP
            Protocol: 
            TCP
            Port range: 
            80
            Source type:
            Anywhere-IPv4
            Source: 
            0.0.0.0/0
            Description: 
            HTTP
            
            - Next will also open port 443 to allow our server to send and recieve secure traffic:
            Type:
            Custom TCP
            Protocol: 
            TCP
            Port range: 
            443
            Source type:
            Anywhere-IPv4
            Source: 
            0.0.0.0/0
            Description: 
            HTTPS
            
            - Finally we are going to set up a port under "3333", now 3333 is not a standard port but is essential that it is open in order for gophish admin panel to access and work with the server, If this port is not available gophish admin panel will have no way to access and you will recieve the warning "Connection Timed out.":
            Type:
            Custom TCP
            Protocol: 
            TCP
            Port range: 
            3333
            Source type:
            Anywhere-IPv4
            Source: 
            0.0.0.0/0
            Description: 
            Gophihsh_admin
            
            # Now finalize all the new rules you have created by clicking "Create Security group" at the bottom.
            
* Once Instance choices are made and a security group we created is assigned to that insatance we can go ahead and launch.

* To test if your instance is currently open and accepting traffic through its ports you can go and try to ssh into the server with the .pem key on port 22:

ssh -i /home/kali/Desktop/gophish.pem ubuntu@44.201.169.181

* MAILGUN SETUP:

            - Start by adding the domain to your mailgun dashboard
            - Open your DNS records/settings from whatever site you chose to obtain your Domain from (ex. Freenom, route 53, etc..)
            - Copy over the records that are provided by Mailgun and submit them over to the site you aquired Domain from
            - 

---> Note: mailgun .mx records seem to never verify so we are going ahead to skip them this time. If you want to read the response that the victim sends back then you will want to add your mx records 

* NEW NEW



*
*
*
*
